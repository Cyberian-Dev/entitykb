{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Admin.svelte",
    "../../App.svelte",
    "../../Menu.svelte",
    "../../Pagination.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {search} from './api.js';\n    import Pagination from \"./Pagination.svelte\";\n\n    let term = '';\n    let key = '';\n    let label = '';\n    let attr_name = '';\n    let attr_value = '';\n    let page = 0;\n    let showFilter = false;\n\n    let data = {\"nodes\": [], \"trails\": []};\n    const hide_attrs = [\"key\", \"label\", \"name\", \"synonyms\"];\n\n    const onChange = async () => {\n        page = 0;\n        data = await search(term, key, label, attr_name, attr_value, page);\n    };\n\n    const onChangePage = async () => {\n        data = await search(term, key, label, attr_name, attr_value, page);\n    };\n\n    const showFilters = () => {\n        showFilter = true;\n    };\n\n    const clearFilters = () => {\n        term = '';\n        key = '';\n        label = '';\n        attr_name = '';\n        attr_value = '';\n        page = 0;\n        showFilter = false;\n    };\n\n    $: onChange(term);\n    $: onChange(key);\n    $: onChange(label);\n    $: onChange(attr_name);\n    $: onChange(attr_value);\n    $: onChangePage(page);\n</script>\n\n<div class=\"ui grid\">\n    <div class=\"eight wide column\">\n        {#if showFilter}\n        <button class=\"ui labeled icon red button\" on:click={clearFilters}>\n          <i class=\"minus circle icon\"></i>\n          Clear Filters\n        </button>\n        {:else}\n        <button class=\"ui labeled icon blue button\" on:click={showFilters}>\n            <i class=\"filter icon\"></i>\n            Show Filters\n        </button>\n        {/if}\n    </div>\n    <div class=\"eight wide column right aligned\">\n       <Pagination bind:page={page}/>\n    </div>\n</div>\n\n<table class=\"ui compact celled striped table top aligned\">\n    <thead class=\"full-width\">\n    <tr>\n        <th class=\"two wide\">\n            Name (Synonyms)\n        </th>\n        <th class=\"two wide\">\n            Key\n        </th>\n        <th class=\"two wide\">\n            Label\n        </th>\n        <th class=\"four wide\">\n            Attributes\n        </th>\n    </tr>\n    {#if showFilter}\n    <tr class=\"center aligned\">\n        <th><input placeholder=\"prefix\" bind:value={term}></th>\n        <th><input placeholder=\"key\" bind:value={key}></th>\n        <th><input placeholder=\"label\" bind:value={label}></th>\n        <th nowrap=\"nowrap\">\n            <input placeholder=\"name\" bind:value={attr_name}>\n            &thickapprox;\n            <input placeholder=\"value\" bind:value={attr_value}>\n        </th>\n    </tr>\n    {/if}\n    </thead>\n    <tbody>\n    {#each data.nodes as node}\n        <tr>\n            <td>\n                {node.name}\n                {#if node.synonyms}\n                    {#each node.synonyms as synonym}\n                        {synonym}\n                    {/each}\n                {/if}\n            </td>\n            <td>{node.key}</td>\n            <td>{node.label}</td>\n            <td>\n                <table class=\"ui compact celled table top aligned\">\n                    {#each Object.keys(node) as name}\n                        {#if (node[name] != null) && !hide_attrs.includes(name)}\n                            <tr class=\"top aligned\">\n                                <td class=\"four wide field_name\">{name}:</td>\n                                <td class=\"twelve wide\">{node[name]}</td>\n                            </tr>\n                        {/if}\n                    {/each}\n                </table>\n            </td>\n        </tr>\n    {/each}\n    </tbody>\n</table>\n\n<style>\n    .field_name {\n        font-weight: bold;\n        color: #444444;\n        background-color: #DDD5DD;\n    }\n</style>",
    "<script>\n    import Menu from \"./Menu.svelte\";\n    import Bottom from \"./Bottom.svelte\";\n    import Admin from \"./Admin.svelte\";\n\n    let choice = \"admin\";\n</script>\n\n<main>\n    <Menu bind:choice={choice} />\n\n    {#if (choice === \"admin\")}\n    <div id=\"content\">\n        <Admin />\n    </div>\n    {:else if (choice === \"api\")}\n        <iframe src=\"/docs\"></iframe>\n    {:else if (choice === \"docs\")}\n        <iframe src=\"https://www.entitykb.org/\"></iframe>\n    {:else if (choice === \"docs\")}\n        <iframe src=\"https://www.entitykb.org/\"></iframe>\n    {/if}\n\n    <Bottom />\n</main>\n\n<style>\n    iframe {\n        width: 100%;\n        height: calc(85vh);\n        border: 0;\n    }\n    #content {\n        padding: 1em;\n        margin: 1em 3em 5em 3em;\n    }\n</style>",
    "<script>\n    export let choice = \"admin\";\n\n    function setChoice(e) {\n        window.$(\".menu .active\").removeClass(\"active\");\n        choice = e.target.id;\n    }\n\n    $: window.$(\"#\" + choice).addClass(\"active\");\n\n</script>\n\n<div class=\"ui top menu\">\n  <div class=\"item\">\n      <i class=\"large lightbulb outline icon\"></i>\n  </div>\n  <a id=\"admin\" class=\"active item\" on:click={setChoice}>Admin</a>\n  <a id=\"api\" class=\"item\" on:click={setChoice}>API</a>\n  <a id=\"docs\" class=\"item\" on:click={setChoice}>Docs</a>\n</div>\n\n<style>\ndiv.top.menu {\n    border: 0;\n    font-size: 1.4em;\n}\n</style>",
    "<script>\n    export let page = 0;\n    let items = [];\n    let addedNull = false;\n\n    function onClick(evt) {\n        page = parseInt(evt.target.attributes['data-value'].value);\n    }\n\n    function changePage() {\n        items = [];\n        let addedNull = false;\n        for (let i=0; i <= page; i++) {\n            if (i < 4) {\n                items.push(i);\n            } else if ((page - i) < 4) {\n                items.push(i);\n            } else if (!addedNull) {\n                addedNull = true;\n                items.push(null);\n            }\n        }\n        items.push(page + 1);\n\n        while (items.length < 10) {\n            items.push(null);\n        }\n\n    }\n\n    $: changePage(page);\n</script>\n\n<b>Page:</b>\n\n<div class=\"ui pagination tiny menu\">\n    {#each items as item}\n        {#if item === null}\n            <a class=\"disabled item\">...</a>\n        {:else}\n        <a class=\"item\"\n           data-value={item}\n           class:active={item === page}\n           on:click={onClick}>\n            {item + 1}\n        </a>\n        {/if}\n    {/each}\n</div>\n\n<style>\n    .menu .item {\n        width: 2em;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AA6HI,WAAW,eAAC,CAAC,AACT,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,OAAO,AAC7B,CAAC;ACtGD,MAAM,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,IAAI,CAAC,CAClB,MAAM,CAAE,CAAC,AACb,CAAC,AACD,QAAQ,cAAC,CAAC,AACN,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAC3B,CAAC;ACbL,GAAG,IAAI,KAAK,eAAC,CAAC,AACV,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,KAAK,AACpB,CAAC;AC0BG,mBAAK,CAAC,KAAK,cAAC,CAAC,AACT,KAAK,CAAE,GAAG,AACd,CAAC"
}